# Sample namespace
apiVersion: v1
kind: Namespace
metadata:
  name: cluster-sample-ns
---
# A secret of harbor admin password.
apiVersion: v1
kind: Secret
metadata:
  name: admin-core-secret
  namespace: cluster-sample-ns
data:
  secret: SGFyYm9yMTIzNDU=
type: Opaque
---
# Cert issuer
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: selfsigned-issuer
  namespace: cluster-sample-ns
spec:
  selfSigned: {}
---
# Certificates of ingress
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: sample-public-certificate
  namespace: cluster-sample-ns
spec:
  secretName: sample-public-certificate
  dnsNames:
    - core.harbor.domain
    - notary.harbor.domain
  issuerRef:
    name: selfsigned-issuer
    kind: Issuer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sample-harbor-registry
  namespace: cluster-sample-ns
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 5Gi
---
# Full stack Harbor
apiVersion: goharbor.io/v1alpha2
kind: HarborCluster
metadata:
  name: harborcluster-sample
  namespace: cluster-sample-ns
spec:
  imageSource:
    repository: quay.io/goharbor
  harborAdminPasswordRef: admin-core-secret
  externalURL: https://core.harbor.domain
  expose:
    core:
      ingress:
        host: core.harbor.domain
      tls:
        certificateRef: sample-public-certificate
  encryptionKeyRef: core-database-encryption
  internalTLS:
    enabled: true
  portal: {}
  registry: {}
  core:
    tokenIssuer:
      name: selfsigned-issuer
      kind: Issuer
  imageChartStorage:
    filesystem:
      registryPersistentVolume:
        claimName: sample-harbor-registry
  inClusterDatabase:
    kind: PostgresSQL
    postgresSqlSpec:
      storage: 1Gi
      replicas: 2
      version: "12"
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 100m
          memory: 250Mi
  inClusterCache:
    kind: Redis
    redisSpec:
      server:
        replicas: 1
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 250Mi
      sentinel:
        replicas: 1
