// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/goharbor/harbor-operator/pkg/sdk/harbor/models"
)

// NewPutQuotasIDParams creates a new PutQuotasIDParams object
// with the default values initialized.
func NewPutQuotasIDParams() *PutQuotasIDParams {
	var ()
	return &PutQuotasIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutQuotasIDParamsWithTimeout creates a new PutQuotasIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutQuotasIDParamsWithTimeout(timeout time.Duration) *PutQuotasIDParams {
	var ()
	return &PutQuotasIDParams{

		timeout: timeout,
	}
}

// NewPutQuotasIDParamsWithContext creates a new PutQuotasIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutQuotasIDParamsWithContext(ctx context.Context) *PutQuotasIDParams {
	var ()
	return &PutQuotasIDParams{

		Context: ctx,
	}
}

// NewPutQuotasIDParamsWithHTTPClient creates a new PutQuotasIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutQuotasIDParamsWithHTTPClient(client *http.Client) *PutQuotasIDParams {
	var ()
	return &PutQuotasIDParams{
		HTTPClient: client,
	}
}

/*PutQuotasIDParams contains all the parameters to send to the API endpoint
for the put quotas ID operation typically these are written to a http.Request
*/
type PutQuotasIDParams struct {

	/*Hard
	  The new hard limits for the quota

	*/
	Hard *models.QuotaUpdateReq
	/*ID
	  Quota ID

	*/
	ID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put quotas ID params
func (o *PutQuotasIDParams) WithTimeout(timeout time.Duration) *PutQuotasIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put quotas ID params
func (o *PutQuotasIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put quotas ID params
func (o *PutQuotasIDParams) WithContext(ctx context.Context) *PutQuotasIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put quotas ID params
func (o *PutQuotasIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put quotas ID params
func (o *PutQuotasIDParams) WithHTTPClient(client *http.Client) *PutQuotasIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put quotas ID params
func (o *PutQuotasIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithHard adds the hard to the put quotas ID params
func (o *PutQuotasIDParams) WithHard(hard *models.QuotaUpdateReq) *PutQuotasIDParams {
	o.SetHard(hard)
	return o
}

// SetHard adds the hard to the put quotas ID params
func (o *PutQuotasIDParams) SetHard(hard *models.QuotaUpdateReq) {
	o.Hard = hard
}

// WithID adds the id to the put quotas ID params
func (o *PutQuotasIDParams) WithID(id int64) *PutQuotasIDParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the put quotas ID params
func (o *PutQuotasIDParams) SetID(id int64) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *PutQuotasIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Hard != nil {
		if err := r.SetBodyParam(o.Hard); err != nil {
			return err
		}
	}

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt64(o.ID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
