// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutConfigurationsReader is a Reader for the PutConfigurations structure.
type PutConfigurationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutConfigurationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutConfigurationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPutConfigurationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutConfigurationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutConfigurationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutConfigurationsOK creates a PutConfigurationsOK with default headers values
func NewPutConfigurationsOK() *PutConfigurationsOK {
	return &PutConfigurationsOK{}
}

/*PutConfigurationsOK handles this case with default header values.

Modify system configurations successfully.
*/
type PutConfigurationsOK struct {
}

func (o *PutConfigurationsOK) Error() string {
	return fmt.Sprintf("[PUT /configurations][%d] putConfigurationsOK ", 200)
}

func (o *PutConfigurationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutConfigurationsUnauthorized creates a PutConfigurationsUnauthorized with default headers values
func NewPutConfigurationsUnauthorized() *PutConfigurationsUnauthorized {
	return &PutConfigurationsUnauthorized{}
}

/*PutConfigurationsUnauthorized handles this case with default header values.

User need to log in first.
*/
type PutConfigurationsUnauthorized struct {
}

func (o *PutConfigurationsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /configurations][%d] putConfigurationsUnauthorized ", 401)
}

func (o *PutConfigurationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutConfigurationsForbidden creates a PutConfigurationsForbidden with default headers values
func NewPutConfigurationsForbidden() *PutConfigurationsForbidden {
	return &PutConfigurationsForbidden{}
}

/*PutConfigurationsForbidden handles this case with default header values.

User does not have permission of admin role.
*/
type PutConfigurationsForbidden struct {
}

func (o *PutConfigurationsForbidden) Error() string {
	return fmt.Sprintf("[PUT /configurations][%d] putConfigurationsForbidden ", 403)
}

func (o *PutConfigurationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutConfigurationsInternalServerError creates a PutConfigurationsInternalServerError with default headers values
func NewPutConfigurationsInternalServerError() *PutConfigurationsInternalServerError {
	return &PutConfigurationsInternalServerError{}
}

/*PutConfigurationsInternalServerError handles this case with default header values.

Unexpected internal errors.
*/
type PutConfigurationsInternalServerError struct {
}

func (o *PutConfigurationsInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /configurations][%d] putConfigurationsInternalServerError ", 500)
}

func (o *PutConfigurationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
