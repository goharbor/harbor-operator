// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutUsergroupsGroupIDReader is a Reader for the PutUsergroupsGroupID structure.
type PutUsergroupsGroupIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutUsergroupsGroupIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutUsergroupsGroupIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutUsergroupsGroupIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutUsergroupsGroupIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutUsergroupsGroupIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutUsergroupsGroupIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutUsergroupsGroupIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutUsergroupsGroupIDOK creates a PutUsergroupsGroupIDOK with default headers values
func NewPutUsergroupsGroupIDOK() *PutUsergroupsGroupIDOK {
	return &PutUsergroupsGroupIDOK{}
}

/*PutUsergroupsGroupIDOK handles this case with default header values.

User group updated successfully.
*/
type PutUsergroupsGroupIDOK struct {
}

func (o *PutUsergroupsGroupIDOK) Error() string {
	return fmt.Sprintf("[PUT /usergroups/{group_id}][%d] putUsergroupsGroupIdOK ", 200)
}

func (o *PutUsergroupsGroupIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutUsergroupsGroupIDBadRequest creates a PutUsergroupsGroupIDBadRequest with default headers values
func NewPutUsergroupsGroupIDBadRequest() *PutUsergroupsGroupIDBadRequest {
	return &PutUsergroupsGroupIDBadRequest{}
}

/*PutUsergroupsGroupIDBadRequest handles this case with default header values.

The user group id is invalid.
*/
type PutUsergroupsGroupIDBadRequest struct {
}

func (o *PutUsergroupsGroupIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /usergroups/{group_id}][%d] putUsergroupsGroupIdBadRequest ", 400)
}

func (o *PutUsergroupsGroupIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutUsergroupsGroupIDUnauthorized creates a PutUsergroupsGroupIDUnauthorized with default headers values
func NewPutUsergroupsGroupIDUnauthorized() *PutUsergroupsGroupIDUnauthorized {
	return &PutUsergroupsGroupIDUnauthorized{}
}

/*PutUsergroupsGroupIDUnauthorized handles this case with default header values.

User need to log in first.
*/
type PutUsergroupsGroupIDUnauthorized struct {
}

func (o *PutUsergroupsGroupIDUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /usergroups/{group_id}][%d] putUsergroupsGroupIdUnauthorized ", 401)
}

func (o *PutUsergroupsGroupIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutUsergroupsGroupIDForbidden creates a PutUsergroupsGroupIDForbidden with default headers values
func NewPutUsergroupsGroupIDForbidden() *PutUsergroupsGroupIDForbidden {
	return &PutUsergroupsGroupIDForbidden{}
}

/*PutUsergroupsGroupIDForbidden handles this case with default header values.

Only admin has this authority.
*/
type PutUsergroupsGroupIDForbidden struct {
}

func (o *PutUsergroupsGroupIDForbidden) Error() string {
	return fmt.Sprintf("[PUT /usergroups/{group_id}][%d] putUsergroupsGroupIdForbidden ", 403)
}

func (o *PutUsergroupsGroupIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutUsergroupsGroupIDNotFound creates a PutUsergroupsGroupIDNotFound with default headers values
func NewPutUsergroupsGroupIDNotFound() *PutUsergroupsGroupIDNotFound {
	return &PutUsergroupsGroupIDNotFound{}
}

/*PutUsergroupsGroupIDNotFound handles this case with default header values.

User group does not exist.
*/
type PutUsergroupsGroupIDNotFound struct {
}

func (o *PutUsergroupsGroupIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /usergroups/{group_id}][%d] putUsergroupsGroupIdNotFound ", 404)
}

func (o *PutUsergroupsGroupIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutUsergroupsGroupIDInternalServerError creates a PutUsergroupsGroupIDInternalServerError with default headers values
func NewPutUsergroupsGroupIDInternalServerError() *PutUsergroupsGroupIDInternalServerError {
	return &PutUsergroupsGroupIDInternalServerError{}
}

/*PutUsergroupsGroupIDInternalServerError handles this case with default header values.

Unexpected internal errors.
*/
type PutUsergroupsGroupIDInternalServerError struct {
}

func (o *PutUsergroupsGroupIDInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /usergroups/{group_id}][%d] putUsergroupsGroupIdInternalServerError ", 500)
}

func (o *PutUsergroupsGroupIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
