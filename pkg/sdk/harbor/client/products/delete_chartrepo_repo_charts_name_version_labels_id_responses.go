// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteChartrepoRepoChartsNameVersionLabelsIDReader is a Reader for the DeleteChartrepoRepoChartsNameVersionLabelsID structure.
type DeleteChartrepoRepoChartsNameVersionLabelsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteChartrepoRepoChartsNameVersionLabelsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteChartrepoRepoChartsNameVersionLabelsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteChartrepoRepoChartsNameVersionLabelsIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteChartrepoRepoChartsNameVersionLabelsIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteChartrepoRepoChartsNameVersionLabelsIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteChartrepoRepoChartsNameVersionLabelsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteChartrepoRepoChartsNameVersionLabelsIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteChartrepoRepoChartsNameVersionLabelsIDOK creates a DeleteChartrepoRepoChartsNameVersionLabelsIDOK with default headers values
func NewDeleteChartrepoRepoChartsNameVersionLabelsIDOK() *DeleteChartrepoRepoChartsNameVersionLabelsIDOK {
	return &DeleteChartrepoRepoChartsNameVersionLabelsIDOK{}
}

/*DeleteChartrepoRepoChartsNameVersionLabelsIDOK handles this case with default header values.

The label is successfully unmarked from the chart version.
*/
type DeleteChartrepoRepoChartsNameVersionLabelsIDOK struct {
}

func (o *DeleteChartrepoRepoChartsNameVersionLabelsIDOK) Error() string {
	return fmt.Sprintf("[DELETE /chartrepo/{repo}/charts/{name}/{version}/labels/{id}][%d] deleteChartrepoRepoChartsNameVersionLabelsIdOK ", 200)
}

func (o *DeleteChartrepoRepoChartsNameVersionLabelsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteChartrepoRepoChartsNameVersionLabelsIDBadRequest creates a DeleteChartrepoRepoChartsNameVersionLabelsIDBadRequest with default headers values
func NewDeleteChartrepoRepoChartsNameVersionLabelsIDBadRequest() *DeleteChartrepoRepoChartsNameVersionLabelsIDBadRequest {
	return &DeleteChartrepoRepoChartsNameVersionLabelsIDBadRequest{}
}

/*DeleteChartrepoRepoChartsNameVersionLabelsIDBadRequest handles this case with default header values.

Bad request
*/
type DeleteChartrepoRepoChartsNameVersionLabelsIDBadRequest struct {
}

func (o *DeleteChartrepoRepoChartsNameVersionLabelsIDBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /chartrepo/{repo}/charts/{name}/{version}/labels/{id}][%d] deleteChartrepoRepoChartsNameVersionLabelsIdBadRequest ", 400)
}

func (o *DeleteChartrepoRepoChartsNameVersionLabelsIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteChartrepoRepoChartsNameVersionLabelsIDUnauthorized creates a DeleteChartrepoRepoChartsNameVersionLabelsIDUnauthorized with default headers values
func NewDeleteChartrepoRepoChartsNameVersionLabelsIDUnauthorized() *DeleteChartrepoRepoChartsNameVersionLabelsIDUnauthorized {
	return &DeleteChartrepoRepoChartsNameVersionLabelsIDUnauthorized{}
}

/*DeleteChartrepoRepoChartsNameVersionLabelsIDUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteChartrepoRepoChartsNameVersionLabelsIDUnauthorized struct {
}

func (o *DeleteChartrepoRepoChartsNameVersionLabelsIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /chartrepo/{repo}/charts/{name}/{version}/labels/{id}][%d] deleteChartrepoRepoChartsNameVersionLabelsIdUnauthorized ", 401)
}

func (o *DeleteChartrepoRepoChartsNameVersionLabelsIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteChartrepoRepoChartsNameVersionLabelsIDForbidden creates a DeleteChartrepoRepoChartsNameVersionLabelsIDForbidden with default headers values
func NewDeleteChartrepoRepoChartsNameVersionLabelsIDForbidden() *DeleteChartrepoRepoChartsNameVersionLabelsIDForbidden {
	return &DeleteChartrepoRepoChartsNameVersionLabelsIDForbidden{}
}

/*DeleteChartrepoRepoChartsNameVersionLabelsIDForbidden handles this case with default header values.

Operation is forbidden or quota exceeded
*/
type DeleteChartrepoRepoChartsNameVersionLabelsIDForbidden struct {
}

func (o *DeleteChartrepoRepoChartsNameVersionLabelsIDForbidden) Error() string {
	return fmt.Sprintf("[DELETE /chartrepo/{repo}/charts/{name}/{version}/labels/{id}][%d] deleteChartrepoRepoChartsNameVersionLabelsIdForbidden ", 403)
}

func (o *DeleteChartrepoRepoChartsNameVersionLabelsIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteChartrepoRepoChartsNameVersionLabelsIDNotFound creates a DeleteChartrepoRepoChartsNameVersionLabelsIDNotFound with default headers values
func NewDeleteChartrepoRepoChartsNameVersionLabelsIDNotFound() *DeleteChartrepoRepoChartsNameVersionLabelsIDNotFound {
	return &DeleteChartrepoRepoChartsNameVersionLabelsIDNotFound{}
}

/*DeleteChartrepoRepoChartsNameVersionLabelsIDNotFound handles this case with default header values.

Not found
*/
type DeleteChartrepoRepoChartsNameVersionLabelsIDNotFound struct {
}

func (o *DeleteChartrepoRepoChartsNameVersionLabelsIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /chartrepo/{repo}/charts/{name}/{version}/labels/{id}][%d] deleteChartrepoRepoChartsNameVersionLabelsIdNotFound ", 404)
}

func (o *DeleteChartrepoRepoChartsNameVersionLabelsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteChartrepoRepoChartsNameVersionLabelsIDInternalServerError creates a DeleteChartrepoRepoChartsNameVersionLabelsIDInternalServerError with default headers values
func NewDeleteChartrepoRepoChartsNameVersionLabelsIDInternalServerError() *DeleteChartrepoRepoChartsNameVersionLabelsIDInternalServerError {
	return &DeleteChartrepoRepoChartsNameVersionLabelsIDInternalServerError{}
}

/*DeleteChartrepoRepoChartsNameVersionLabelsIDInternalServerError handles this case with default header values.

Internal server error occurred
*/
type DeleteChartrepoRepoChartsNameVersionLabelsIDInternalServerError struct {
}

func (o *DeleteChartrepoRepoChartsNameVersionLabelsIDInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /chartrepo/{repo}/charts/{name}/{version}/labels/{id}][%d] deleteChartrepoRepoChartsNameVersionLabelsIdInternalServerError ", 500)
}

func (o *DeleteChartrepoRepoChartsNameVersionLabelsIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
