// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/goharbor/harbor-operator/pkg/sdk/harbor/models"
)

// GetSystemGcReader is a Reader for the GetSystemGc structure.
type GetSystemGcReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSystemGcReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSystemGcOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetSystemGcUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSystemGcForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSystemGcInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSystemGcOK creates a GetSystemGcOK with default headers values
func NewGetSystemGcOK() *GetSystemGcOK {
	return &GetSystemGcOK{}
}

/*GetSystemGcOK handles this case with default header values.

Get gc results successfully.
*/
type GetSystemGcOK struct {
	Payload []*models.GCResult
}

func (o *GetSystemGcOK) Error() string {
	return fmt.Sprintf("[GET /system/gc][%d] getSystemGcOK  %+v", 200, o.Payload)
}

func (o *GetSystemGcOK) GetPayload() []*models.GCResult {
	return o.Payload
}

func (o *GetSystemGcOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSystemGcUnauthorized creates a GetSystemGcUnauthorized with default headers values
func NewGetSystemGcUnauthorized() *GetSystemGcUnauthorized {
	return &GetSystemGcUnauthorized{}
}

/*GetSystemGcUnauthorized handles this case with default header values.

User need to log in first.
*/
type GetSystemGcUnauthorized struct {
}

func (o *GetSystemGcUnauthorized) Error() string {
	return fmt.Sprintf("[GET /system/gc][%d] getSystemGcUnauthorized ", 401)
}

func (o *GetSystemGcUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSystemGcForbidden creates a GetSystemGcForbidden with default headers values
func NewGetSystemGcForbidden() *GetSystemGcForbidden {
	return &GetSystemGcForbidden{}
}

/*GetSystemGcForbidden handles this case with default header values.

User does not have permission of admin role.
*/
type GetSystemGcForbidden struct {
}

func (o *GetSystemGcForbidden) Error() string {
	return fmt.Sprintf("[GET /system/gc][%d] getSystemGcForbidden ", 403)
}

func (o *GetSystemGcForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSystemGcInternalServerError creates a GetSystemGcInternalServerError with default headers values
func NewGetSystemGcInternalServerError() *GetSystemGcInternalServerError {
	return &GetSystemGcInternalServerError{}
}

/*GetSystemGcInternalServerError handles this case with default header values.

Unexpected internal errors.
*/
type GetSystemGcInternalServerError struct {
}

func (o *GetSystemGcInternalServerError) Error() string {
	return fmt.Sprintf("[GET /system/gc][%d] getSystemGcInternalServerError ", 500)
}

func (o *GetSystemGcInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
