// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteProjectsProjectIDMetadatasMetaNameReader is a Reader for the DeleteProjectsProjectIDMetadatasMetaName structure.
type DeleteProjectsProjectIDMetadatasMetaNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteProjectsProjectIDMetadatasMetaNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteProjectsProjectIDMetadatasMetaNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteProjectsProjectIDMetadatasMetaNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteProjectsProjectIDMetadatasMetaNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteProjectsProjectIDMetadatasMetaNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteProjectsProjectIDMetadatasMetaNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteProjectsProjectIDMetadatasMetaNameOK creates a DeleteProjectsProjectIDMetadatasMetaNameOK with default headers values
func NewDeleteProjectsProjectIDMetadatasMetaNameOK() *DeleteProjectsProjectIDMetadatasMetaNameOK {
	return &DeleteProjectsProjectIDMetadatasMetaNameOK{}
}

/*DeleteProjectsProjectIDMetadatasMetaNameOK handles this case with default header values.

Metadata is deleted successfully.
*/
type DeleteProjectsProjectIDMetadatasMetaNameOK struct {
}

func (o *DeleteProjectsProjectIDMetadatasMetaNameOK) Error() string {
	return fmt.Sprintf("[DELETE /projects/{project_id}/metadatas/{meta_name}][%d] deleteProjectsProjectIdMetadatasMetaNameOK ", 200)
}

func (o *DeleteProjectsProjectIDMetadatasMetaNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteProjectsProjectIDMetadatasMetaNameBadRequest creates a DeleteProjectsProjectIDMetadatasMetaNameBadRequest with default headers values
func NewDeleteProjectsProjectIDMetadatasMetaNameBadRequest() *DeleteProjectsProjectIDMetadatasMetaNameBadRequest {
	return &DeleteProjectsProjectIDMetadatasMetaNameBadRequest{}
}

/*DeleteProjectsProjectIDMetadatasMetaNameBadRequest handles this case with default header values.

Invalid requst.
*/
type DeleteProjectsProjectIDMetadatasMetaNameBadRequest struct {
}

func (o *DeleteProjectsProjectIDMetadatasMetaNameBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /projects/{project_id}/metadatas/{meta_name}][%d] deleteProjectsProjectIdMetadatasMetaNameBadRequest ", 400)
}

func (o *DeleteProjectsProjectIDMetadatasMetaNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteProjectsProjectIDMetadatasMetaNameForbidden creates a DeleteProjectsProjectIDMetadatasMetaNameForbidden with default headers values
func NewDeleteProjectsProjectIDMetadatasMetaNameForbidden() *DeleteProjectsProjectIDMetadatasMetaNameForbidden {
	return &DeleteProjectsProjectIDMetadatasMetaNameForbidden{}
}

/*DeleteProjectsProjectIDMetadatasMetaNameForbidden handles this case with default header values.

User need to log in first.
*/
type DeleteProjectsProjectIDMetadatasMetaNameForbidden struct {
}

func (o *DeleteProjectsProjectIDMetadatasMetaNameForbidden) Error() string {
	return fmt.Sprintf("[DELETE /projects/{project_id}/metadatas/{meta_name}][%d] deleteProjectsProjectIdMetadatasMetaNameForbidden ", 403)
}

func (o *DeleteProjectsProjectIDMetadatasMetaNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteProjectsProjectIDMetadatasMetaNameNotFound creates a DeleteProjectsProjectIDMetadatasMetaNameNotFound with default headers values
func NewDeleteProjectsProjectIDMetadatasMetaNameNotFound() *DeleteProjectsProjectIDMetadatasMetaNameNotFound {
	return &DeleteProjectsProjectIDMetadatasMetaNameNotFound{}
}

/*DeleteProjectsProjectIDMetadatasMetaNameNotFound handles this case with default header values.

Project or metadata does not exist.
*/
type DeleteProjectsProjectIDMetadatasMetaNameNotFound struct {
}

func (o *DeleteProjectsProjectIDMetadatasMetaNameNotFound) Error() string {
	return fmt.Sprintf("[DELETE /projects/{project_id}/metadatas/{meta_name}][%d] deleteProjectsProjectIdMetadatasMetaNameNotFound ", 404)
}

func (o *DeleteProjectsProjectIDMetadatasMetaNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteProjectsProjectIDMetadatasMetaNameInternalServerError creates a DeleteProjectsProjectIDMetadatasMetaNameInternalServerError with default headers values
func NewDeleteProjectsProjectIDMetadatasMetaNameInternalServerError() *DeleteProjectsProjectIDMetadatasMetaNameInternalServerError {
	return &DeleteProjectsProjectIDMetadatasMetaNameInternalServerError{}
}

/*DeleteProjectsProjectIDMetadatasMetaNameInternalServerError handles this case with default header values.

Internal server errors.
*/
type DeleteProjectsProjectIDMetadatasMetaNameInternalServerError struct {
}

func (o *DeleteProjectsProjectIDMetadatasMetaNameInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /projects/{project_id}/metadatas/{meta_name}][%d] deleteProjectsProjectIdMetadatasMetaNameInternalServerError ", 500)
}

func (o *DeleteProjectsProjectIDMetadatasMetaNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
