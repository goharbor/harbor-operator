// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetLdapGroupsSearchParams creates a new GetLdapGroupsSearchParams object
// with the default values initialized.
func NewGetLdapGroupsSearchParams() *GetLdapGroupsSearchParams {
	var ()
	return &GetLdapGroupsSearchParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetLdapGroupsSearchParamsWithTimeout creates a new GetLdapGroupsSearchParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetLdapGroupsSearchParamsWithTimeout(timeout time.Duration) *GetLdapGroupsSearchParams {
	var ()
	return &GetLdapGroupsSearchParams{

		timeout: timeout,
	}
}

// NewGetLdapGroupsSearchParamsWithContext creates a new GetLdapGroupsSearchParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetLdapGroupsSearchParamsWithContext(ctx context.Context) *GetLdapGroupsSearchParams {
	var ()
	return &GetLdapGroupsSearchParams{

		Context: ctx,
	}
}

// NewGetLdapGroupsSearchParamsWithHTTPClient creates a new GetLdapGroupsSearchParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetLdapGroupsSearchParamsWithHTTPClient(client *http.Client) *GetLdapGroupsSearchParams {
	var ()
	return &GetLdapGroupsSearchParams{
		HTTPClient: client,
	}
}

/*GetLdapGroupsSearchParams contains all the parameters to send to the API endpoint
for the get ldap groups search operation typically these are written to a http.Request
*/
type GetLdapGroupsSearchParams struct {

	/*Groupdn
	  The LDAP group DN

	*/
	Groupdn *string
	/*Groupname
	  Ldap group name

	*/
	Groupname *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get ldap groups search params
func (o *GetLdapGroupsSearchParams) WithTimeout(timeout time.Duration) *GetLdapGroupsSearchParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get ldap groups search params
func (o *GetLdapGroupsSearchParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get ldap groups search params
func (o *GetLdapGroupsSearchParams) WithContext(ctx context.Context) *GetLdapGroupsSearchParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get ldap groups search params
func (o *GetLdapGroupsSearchParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get ldap groups search params
func (o *GetLdapGroupsSearchParams) WithHTTPClient(client *http.Client) *GetLdapGroupsSearchParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get ldap groups search params
func (o *GetLdapGroupsSearchParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithGroupdn adds the groupdn to the get ldap groups search params
func (o *GetLdapGroupsSearchParams) WithGroupdn(groupdn *string) *GetLdapGroupsSearchParams {
	o.SetGroupdn(groupdn)
	return o
}

// SetGroupdn adds the groupdn to the get ldap groups search params
func (o *GetLdapGroupsSearchParams) SetGroupdn(groupdn *string) {
	o.Groupdn = groupdn
}

// WithGroupname adds the groupname to the get ldap groups search params
func (o *GetLdapGroupsSearchParams) WithGroupname(groupname *string) *GetLdapGroupsSearchParams {
	o.SetGroupname(groupname)
	return o
}

// SetGroupname adds the groupname to the get ldap groups search params
func (o *GetLdapGroupsSearchParams) SetGroupname(groupname *string) {
	o.Groupname = groupname
}

// WriteToRequest writes these params to a swagger request
func (o *GetLdapGroupsSearchParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Groupdn != nil {

		// query param groupdn
		var qrGroupdn string
		if o.Groupdn != nil {
			qrGroupdn = *o.Groupdn
		}
		qGroupdn := qrGroupdn
		if qGroupdn != "" {
			if err := r.SetQueryParam("groupdn", qGroupdn); err != nil {
				return err
			}
		}

	}

	if o.Groupname != nil {

		// query param groupname
		var qrGroupname string
		if o.Groupname != nil {
			qrGroupname = *o.Groupname
		}
		qGroupname := qrGroupname
		if qGroupname != "" {
			if err := r.SetQueryParam("groupname", qGroupname); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
