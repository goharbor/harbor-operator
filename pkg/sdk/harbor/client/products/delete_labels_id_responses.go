// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteLabelsIDReader is a Reader for the DeleteLabelsID structure.
type DeleteLabelsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteLabelsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteLabelsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteLabelsIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteLabelsIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteLabelsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteLabelsIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteLabelsIDOK creates a DeleteLabelsIDOK with default headers values
func NewDeleteLabelsIDOK() *DeleteLabelsIDOK {
	return &DeleteLabelsIDOK{}
}

/*DeleteLabelsIDOK handles this case with default header values.

Delete successfully.
*/
type DeleteLabelsIDOK struct {
}

func (o *DeleteLabelsIDOK) Error() string {
	return fmt.Sprintf("[DELETE /labels/{id}][%d] deleteLabelsIdOK ", 200)
}

func (o *DeleteLabelsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteLabelsIDBadRequest creates a DeleteLabelsIDBadRequest with default headers values
func NewDeleteLabelsIDBadRequest() *DeleteLabelsIDBadRequest {
	return &DeleteLabelsIDBadRequest{}
}

/*DeleteLabelsIDBadRequest handles this case with default header values.

Invalid parameters.
*/
type DeleteLabelsIDBadRequest struct {
}

func (o *DeleteLabelsIDBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /labels/{id}][%d] deleteLabelsIdBadRequest ", 400)
}

func (o *DeleteLabelsIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteLabelsIDUnauthorized creates a DeleteLabelsIDUnauthorized with default headers values
func NewDeleteLabelsIDUnauthorized() *DeleteLabelsIDUnauthorized {
	return &DeleteLabelsIDUnauthorized{}
}

/*DeleteLabelsIDUnauthorized handles this case with default header values.

User need to log in first.
*/
type DeleteLabelsIDUnauthorized struct {
}

func (o *DeleteLabelsIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /labels/{id}][%d] deleteLabelsIdUnauthorized ", 401)
}

func (o *DeleteLabelsIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteLabelsIDNotFound creates a DeleteLabelsIDNotFound with default headers values
func NewDeleteLabelsIDNotFound() *DeleteLabelsIDNotFound {
	return &DeleteLabelsIDNotFound{}
}

/*DeleteLabelsIDNotFound handles this case with default header values.

The resource does not exist.
*/
type DeleteLabelsIDNotFound struct {
}

func (o *DeleteLabelsIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /labels/{id}][%d] deleteLabelsIdNotFound ", 404)
}

func (o *DeleteLabelsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteLabelsIDInternalServerError creates a DeleteLabelsIDInternalServerError with default headers values
func NewDeleteLabelsIDInternalServerError() *DeleteLabelsIDInternalServerError {
	return &DeleteLabelsIDInternalServerError{}
}

/*DeleteLabelsIDInternalServerError handles this case with default header values.

Unexpected internal errors.
*/
type DeleteLabelsIDInternalServerError struct {
}

func (o *DeleteLabelsIDInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /labels/{id}][%d] deleteLabelsIdInternalServerError ", 500)
}

func (o *DeleteLabelsIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
