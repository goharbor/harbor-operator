// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/goharbor/harbor-operator/pkg/sdk/harbor/models"
)

// NewPutUsersUserIDSysadminParams creates a new PutUsersUserIDSysadminParams object
// with the default values initialized.
func NewPutUsersUserIDSysadminParams() *PutUsersUserIDSysadminParams {
	var ()
	return &PutUsersUserIDSysadminParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutUsersUserIDSysadminParamsWithTimeout creates a new PutUsersUserIDSysadminParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutUsersUserIDSysadminParamsWithTimeout(timeout time.Duration) *PutUsersUserIDSysadminParams {
	var ()
	return &PutUsersUserIDSysadminParams{

		timeout: timeout,
	}
}

// NewPutUsersUserIDSysadminParamsWithContext creates a new PutUsersUserIDSysadminParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutUsersUserIDSysadminParamsWithContext(ctx context.Context) *PutUsersUserIDSysadminParams {
	var ()
	return &PutUsersUserIDSysadminParams{

		Context: ctx,
	}
}

// NewPutUsersUserIDSysadminParamsWithHTTPClient creates a new PutUsersUserIDSysadminParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutUsersUserIDSysadminParamsWithHTTPClient(client *http.Client) *PutUsersUserIDSysadminParams {
	var ()
	return &PutUsersUserIDSysadminParams{
		HTTPClient: client,
	}
}

/*PutUsersUserIDSysadminParams contains all the parameters to send to the API endpoint
for the put users user ID sysadmin operation typically these are written to a http.Request
*/
type PutUsersUserIDSysadminParams struct {

	/*SysadminFlag
	  Toggle a user to admin or not.

	*/
	SysadminFlag *models.SysAdminFlag
	/*UserID
	  Registered user ID

	*/
	UserID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put users user ID sysadmin params
func (o *PutUsersUserIDSysadminParams) WithTimeout(timeout time.Duration) *PutUsersUserIDSysadminParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put users user ID sysadmin params
func (o *PutUsersUserIDSysadminParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put users user ID sysadmin params
func (o *PutUsersUserIDSysadminParams) WithContext(ctx context.Context) *PutUsersUserIDSysadminParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put users user ID sysadmin params
func (o *PutUsersUserIDSysadminParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put users user ID sysadmin params
func (o *PutUsersUserIDSysadminParams) WithHTTPClient(client *http.Client) *PutUsersUserIDSysadminParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put users user ID sysadmin params
func (o *PutUsersUserIDSysadminParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSysadminFlag adds the sysadminFlag to the put users user ID sysadmin params
func (o *PutUsersUserIDSysadminParams) WithSysadminFlag(sysadminFlag *models.SysAdminFlag) *PutUsersUserIDSysadminParams {
	o.SetSysadminFlag(sysadminFlag)
	return o
}

// SetSysadminFlag adds the sysadminFlag to the put users user ID sysadmin params
func (o *PutUsersUserIDSysadminParams) SetSysadminFlag(sysadminFlag *models.SysAdminFlag) {
	o.SysadminFlag = sysadminFlag
}

// WithUserID adds the userID to the put users user ID sysadmin params
func (o *PutUsersUserIDSysadminParams) WithUserID(userID int64) *PutUsersUserIDSysadminParams {
	o.SetUserID(userID)
	return o
}

// SetUserID adds the userId to the put users user ID sysadmin params
func (o *PutUsersUserIDSysadminParams) SetUserID(userID int64) {
	o.UserID = userID
}

// WriteToRequest writes these params to a swagger request
func (o *PutUsersUserIDSysadminParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.SysadminFlag != nil {
		if err := r.SetBodyParam(o.SysadminFlag); err != nil {
			return err
		}
	}

	// path param user_id
	if err := r.SetPathParam("user_id", swag.FormatInt64(o.UserID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
