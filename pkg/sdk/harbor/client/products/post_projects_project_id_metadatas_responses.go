// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PostProjectsProjectIDMetadatasReader is a Reader for the PostProjectsProjectIDMetadatas structure.
type PostProjectsProjectIDMetadatasReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostProjectsProjectIDMetadatasReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostProjectsProjectIDMetadatasOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostProjectsProjectIDMetadatasBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostProjectsProjectIDMetadatasUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostProjectsProjectIDMetadatasForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostProjectsProjectIDMetadatasNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostProjectsProjectIDMetadatasUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostProjectsProjectIDMetadatasInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostProjectsProjectIDMetadatasOK creates a PostProjectsProjectIDMetadatasOK with default headers values
func NewPostProjectsProjectIDMetadatasOK() *PostProjectsProjectIDMetadatasOK {
	return &PostProjectsProjectIDMetadatasOK{}
}

/*PostProjectsProjectIDMetadatasOK handles this case with default header values.

Add metadata successfully.
*/
type PostProjectsProjectIDMetadatasOK struct {
}

func (o *PostProjectsProjectIDMetadatasOK) Error() string {
	return fmt.Sprintf("[POST /projects/{project_id}/metadatas][%d] postProjectsProjectIdMetadatasOK ", 200)
}

func (o *PostProjectsProjectIDMetadatasOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostProjectsProjectIDMetadatasBadRequest creates a PostProjectsProjectIDMetadatasBadRequest with default headers values
func NewPostProjectsProjectIDMetadatasBadRequest() *PostProjectsProjectIDMetadatasBadRequest {
	return &PostProjectsProjectIDMetadatasBadRequest{}
}

/*PostProjectsProjectIDMetadatasBadRequest handles this case with default header values.

Invalid request.
*/
type PostProjectsProjectIDMetadatasBadRequest struct {
}

func (o *PostProjectsProjectIDMetadatasBadRequest) Error() string {
	return fmt.Sprintf("[POST /projects/{project_id}/metadatas][%d] postProjectsProjectIdMetadatasBadRequest ", 400)
}

func (o *PostProjectsProjectIDMetadatasBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostProjectsProjectIDMetadatasUnauthorized creates a PostProjectsProjectIDMetadatasUnauthorized with default headers values
func NewPostProjectsProjectIDMetadatasUnauthorized() *PostProjectsProjectIDMetadatasUnauthorized {
	return &PostProjectsProjectIDMetadatasUnauthorized{}
}

/*PostProjectsProjectIDMetadatasUnauthorized handles this case with default header values.

User need to log in first.
*/
type PostProjectsProjectIDMetadatasUnauthorized struct {
}

func (o *PostProjectsProjectIDMetadatasUnauthorized) Error() string {
	return fmt.Sprintf("[POST /projects/{project_id}/metadatas][%d] postProjectsProjectIdMetadatasUnauthorized ", 401)
}

func (o *PostProjectsProjectIDMetadatasUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostProjectsProjectIDMetadatasForbidden creates a PostProjectsProjectIDMetadatasForbidden with default headers values
func NewPostProjectsProjectIDMetadatasForbidden() *PostProjectsProjectIDMetadatasForbidden {
	return &PostProjectsProjectIDMetadatasForbidden{}
}

/*PostProjectsProjectIDMetadatasForbidden handles this case with default header values.

User does not have permission to the project.
*/
type PostProjectsProjectIDMetadatasForbidden struct {
}

func (o *PostProjectsProjectIDMetadatasForbidden) Error() string {
	return fmt.Sprintf("[POST /projects/{project_id}/metadatas][%d] postProjectsProjectIdMetadatasForbidden ", 403)
}

func (o *PostProjectsProjectIDMetadatasForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostProjectsProjectIDMetadatasNotFound creates a PostProjectsProjectIDMetadatasNotFound with default headers values
func NewPostProjectsProjectIDMetadatasNotFound() *PostProjectsProjectIDMetadatasNotFound {
	return &PostProjectsProjectIDMetadatasNotFound{}
}

/*PostProjectsProjectIDMetadatasNotFound handles this case with default header values.

Project ID does not exist.
*/
type PostProjectsProjectIDMetadatasNotFound struct {
}

func (o *PostProjectsProjectIDMetadatasNotFound) Error() string {
	return fmt.Sprintf("[POST /projects/{project_id}/metadatas][%d] postProjectsProjectIdMetadatasNotFound ", 404)
}

func (o *PostProjectsProjectIDMetadatasNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostProjectsProjectIDMetadatasUnsupportedMediaType creates a PostProjectsProjectIDMetadatasUnsupportedMediaType with default headers values
func NewPostProjectsProjectIDMetadatasUnsupportedMediaType() *PostProjectsProjectIDMetadatasUnsupportedMediaType {
	return &PostProjectsProjectIDMetadatasUnsupportedMediaType{}
}

/*PostProjectsProjectIDMetadatasUnsupportedMediaType handles this case with default header values.

The Media Type of the request is not supported, it has to be "application/json"
*/
type PostProjectsProjectIDMetadatasUnsupportedMediaType struct {
}

func (o *PostProjectsProjectIDMetadatasUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /projects/{project_id}/metadatas][%d] postProjectsProjectIdMetadatasUnsupportedMediaType ", 415)
}

func (o *PostProjectsProjectIDMetadatasUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostProjectsProjectIDMetadatasInternalServerError creates a PostProjectsProjectIDMetadatasInternalServerError with default headers values
func NewPostProjectsProjectIDMetadatasInternalServerError() *PostProjectsProjectIDMetadatasInternalServerError {
	return &PostProjectsProjectIDMetadatasInternalServerError{}
}

/*PostProjectsProjectIDMetadatasInternalServerError handles this case with default header values.

Internal server errors.
*/
type PostProjectsProjectIDMetadatasInternalServerError struct {
}

func (o *PostProjectsProjectIDMetadatasInternalServerError) Error() string {
	return fmt.Sprintf("[POST /projects/{project_id}/metadatas][%d] postProjectsProjectIdMetadatasInternalServerError ", 500)
}

func (o *PostProjectsProjectIDMetadatasInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
