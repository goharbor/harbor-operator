// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetProjectsProjectIDRobotsParams creates a new GetProjectsProjectIDRobotsParams object
// with the default values initialized.
func NewGetProjectsProjectIDRobotsParams() *GetProjectsProjectIDRobotsParams {
	var ()
	return &GetProjectsProjectIDRobotsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetProjectsProjectIDRobotsParamsWithTimeout creates a new GetProjectsProjectIDRobotsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetProjectsProjectIDRobotsParamsWithTimeout(timeout time.Duration) *GetProjectsProjectIDRobotsParams {
	var ()
	return &GetProjectsProjectIDRobotsParams{

		timeout: timeout,
	}
}

// NewGetProjectsProjectIDRobotsParamsWithContext creates a new GetProjectsProjectIDRobotsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetProjectsProjectIDRobotsParamsWithContext(ctx context.Context) *GetProjectsProjectIDRobotsParams {
	var ()
	return &GetProjectsProjectIDRobotsParams{

		Context: ctx,
	}
}

// NewGetProjectsProjectIDRobotsParamsWithHTTPClient creates a new GetProjectsProjectIDRobotsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetProjectsProjectIDRobotsParamsWithHTTPClient(client *http.Client) *GetProjectsProjectIDRobotsParams {
	var ()
	return &GetProjectsProjectIDRobotsParams{
		HTTPClient: client,
	}
}

/*GetProjectsProjectIDRobotsParams contains all the parameters to send to the API endpoint
for the get projects project ID robots operation typically these are written to a http.Request
*/
type GetProjectsProjectIDRobotsParams struct {

	/*Page
	  The page number.

	*/
	Page *int32
	/*PageSize
	  The size of per page.

	*/
	PageSize *int32
	/*ProjectID
	  Relevant project ID.

	*/
	ProjectID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get projects project ID robots params
func (o *GetProjectsProjectIDRobotsParams) WithTimeout(timeout time.Duration) *GetProjectsProjectIDRobotsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get projects project ID robots params
func (o *GetProjectsProjectIDRobotsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get projects project ID robots params
func (o *GetProjectsProjectIDRobotsParams) WithContext(ctx context.Context) *GetProjectsProjectIDRobotsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get projects project ID robots params
func (o *GetProjectsProjectIDRobotsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get projects project ID robots params
func (o *GetProjectsProjectIDRobotsParams) WithHTTPClient(client *http.Client) *GetProjectsProjectIDRobotsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get projects project ID robots params
func (o *GetProjectsProjectIDRobotsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPage adds the page to the get projects project ID robots params
func (o *GetProjectsProjectIDRobotsParams) WithPage(page *int32) *GetProjectsProjectIDRobotsParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the get projects project ID robots params
func (o *GetProjectsProjectIDRobotsParams) SetPage(page *int32) {
	o.Page = page
}

// WithPageSize adds the pageSize to the get projects project ID robots params
func (o *GetProjectsProjectIDRobotsParams) WithPageSize(pageSize *int32) *GetProjectsProjectIDRobotsParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the get projects project ID robots params
func (o *GetProjectsProjectIDRobotsParams) SetPageSize(pageSize *int32) {
	o.PageSize = pageSize
}

// WithProjectID adds the projectID to the get projects project ID robots params
func (o *GetProjectsProjectIDRobotsParams) WithProjectID(projectID int64) *GetProjectsProjectIDRobotsParams {
	o.SetProjectID(projectID)
	return o
}

// SetProjectID adds the projectId to the get projects project ID robots params
func (o *GetProjectsProjectIDRobotsParams) SetProjectID(projectID int64) {
	o.ProjectID = projectID
}

// WriteToRequest writes these params to a swagger request
func (o *GetProjectsProjectIDRobotsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Page != nil {

		// query param page
		var qrPage int32
		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatInt32(qrPage)
		if qPage != "" {
			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}

	}

	if o.PageSize != nil {

		// query param page_size
		var qrPageSize int32
		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := swag.FormatInt32(qrPageSize)
		if qPageSize != "" {
			if err := r.SetQueryParam("page_size", qPageSize); err != nil {
				return err
			}
		}

	}

	// path param project_id
	if err := r.SetPathParam("project_id", swag.FormatInt64(o.ProjectID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
