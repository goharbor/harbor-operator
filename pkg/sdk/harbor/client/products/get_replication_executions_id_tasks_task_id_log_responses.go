// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetReplicationExecutionsIDTasksTaskIDLogReader is a Reader for the GetReplicationExecutionsIDTasksTaskIDLog structure.
type GetReplicationExecutionsIDTasksTaskIDLogReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetReplicationExecutionsIDTasksTaskIDLogReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetReplicationExecutionsIDTasksTaskIDLogOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetReplicationExecutionsIDTasksTaskIDLogBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetReplicationExecutionsIDTasksTaskIDLogUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetReplicationExecutionsIDTasksTaskIDLogForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetReplicationExecutionsIDTasksTaskIDLogNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetReplicationExecutionsIDTasksTaskIDLogInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetReplicationExecutionsIDTasksTaskIDLogOK creates a GetReplicationExecutionsIDTasksTaskIDLogOK with default headers values
func NewGetReplicationExecutionsIDTasksTaskIDLogOK() *GetReplicationExecutionsIDTasksTaskIDLogOK {
	return &GetReplicationExecutionsIDTasksTaskIDLogOK{}
}

/*GetReplicationExecutionsIDTasksTaskIDLogOK handles this case with default header values.

Success.
*/
type GetReplicationExecutionsIDTasksTaskIDLogOK struct {
}

func (o *GetReplicationExecutionsIDTasksTaskIDLogOK) Error() string {
	return fmt.Sprintf("[GET /replication/executions/{id}/tasks/{task_id}/log][%d] getReplicationExecutionsIdTasksTaskIdLogOK ", 200)
}

func (o *GetReplicationExecutionsIDTasksTaskIDLogOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetReplicationExecutionsIDTasksTaskIDLogBadRequest creates a GetReplicationExecutionsIDTasksTaskIDLogBadRequest with default headers values
func NewGetReplicationExecutionsIDTasksTaskIDLogBadRequest() *GetReplicationExecutionsIDTasksTaskIDLogBadRequest {
	return &GetReplicationExecutionsIDTasksTaskIDLogBadRequest{}
}

/*GetReplicationExecutionsIDTasksTaskIDLogBadRequest handles this case with default header values.

Bad request.
*/
type GetReplicationExecutionsIDTasksTaskIDLogBadRequest struct {
}

func (o *GetReplicationExecutionsIDTasksTaskIDLogBadRequest) Error() string {
	return fmt.Sprintf("[GET /replication/executions/{id}/tasks/{task_id}/log][%d] getReplicationExecutionsIdTasksTaskIdLogBadRequest ", 400)
}

func (o *GetReplicationExecutionsIDTasksTaskIDLogBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetReplicationExecutionsIDTasksTaskIDLogUnauthorized creates a GetReplicationExecutionsIDTasksTaskIDLogUnauthorized with default headers values
func NewGetReplicationExecutionsIDTasksTaskIDLogUnauthorized() *GetReplicationExecutionsIDTasksTaskIDLogUnauthorized {
	return &GetReplicationExecutionsIDTasksTaskIDLogUnauthorized{}
}

/*GetReplicationExecutionsIDTasksTaskIDLogUnauthorized handles this case with default header values.

User need to login first.
*/
type GetReplicationExecutionsIDTasksTaskIDLogUnauthorized struct {
}

func (o *GetReplicationExecutionsIDTasksTaskIDLogUnauthorized) Error() string {
	return fmt.Sprintf("[GET /replication/executions/{id}/tasks/{task_id}/log][%d] getReplicationExecutionsIdTasksTaskIdLogUnauthorized ", 401)
}

func (o *GetReplicationExecutionsIDTasksTaskIDLogUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetReplicationExecutionsIDTasksTaskIDLogForbidden creates a GetReplicationExecutionsIDTasksTaskIDLogForbidden with default headers values
func NewGetReplicationExecutionsIDTasksTaskIDLogForbidden() *GetReplicationExecutionsIDTasksTaskIDLogForbidden {
	return &GetReplicationExecutionsIDTasksTaskIDLogForbidden{}
}

/*GetReplicationExecutionsIDTasksTaskIDLogForbidden handles this case with default header values.

User has no privilege for the operation.
*/
type GetReplicationExecutionsIDTasksTaskIDLogForbidden struct {
}

func (o *GetReplicationExecutionsIDTasksTaskIDLogForbidden) Error() string {
	return fmt.Sprintf("[GET /replication/executions/{id}/tasks/{task_id}/log][%d] getReplicationExecutionsIdTasksTaskIdLogForbidden ", 403)
}

func (o *GetReplicationExecutionsIDTasksTaskIDLogForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetReplicationExecutionsIDTasksTaskIDLogNotFound creates a GetReplicationExecutionsIDTasksTaskIDLogNotFound with default headers values
func NewGetReplicationExecutionsIDTasksTaskIDLogNotFound() *GetReplicationExecutionsIDTasksTaskIDLogNotFound {
	return &GetReplicationExecutionsIDTasksTaskIDLogNotFound{}
}

/*GetReplicationExecutionsIDTasksTaskIDLogNotFound handles this case with default header values.

Resource requested does not exist.
*/
type GetReplicationExecutionsIDTasksTaskIDLogNotFound struct {
}

func (o *GetReplicationExecutionsIDTasksTaskIDLogNotFound) Error() string {
	return fmt.Sprintf("[GET /replication/executions/{id}/tasks/{task_id}/log][%d] getReplicationExecutionsIdTasksTaskIdLogNotFound ", 404)
}

func (o *GetReplicationExecutionsIDTasksTaskIDLogNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetReplicationExecutionsIDTasksTaskIDLogInternalServerError creates a GetReplicationExecutionsIDTasksTaskIDLogInternalServerError with default headers values
func NewGetReplicationExecutionsIDTasksTaskIDLogInternalServerError() *GetReplicationExecutionsIDTasksTaskIDLogInternalServerError {
	return &GetReplicationExecutionsIDTasksTaskIDLogInternalServerError{}
}

/*GetReplicationExecutionsIDTasksTaskIDLogInternalServerError handles this case with default header values.

Unexpected internal errors.
*/
type GetReplicationExecutionsIDTasksTaskIDLogInternalServerError struct {
}

func (o *GetReplicationExecutionsIDTasksTaskIDLogInternalServerError) Error() string {
	return fmt.Sprintf("[GET /replication/executions/{id}/tasks/{task_id}/log][%d] getReplicationExecutionsIdTasksTaskIdLogInternalServerError ", 500)
}

func (o *GetReplicationExecutionsIDTasksTaskIDLogInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
