// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PostUsergroupsReader is a Reader for the PostUsergroups structure.
type PostUsergroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostUsergroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostUsergroupsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostUsergroupsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostUsergroupsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostUsergroupsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostUsergroupsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostUsergroupsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostUsergroupsCreated creates a PostUsergroupsCreated with default headers values
func NewPostUsergroupsCreated() *PostUsergroupsCreated {
	return &PostUsergroupsCreated{}
}

/*PostUsergroupsCreated handles this case with default header values.

User group created successfully.
*/
type PostUsergroupsCreated struct {
	/*The URL of the created resource
	 */
	Location string
}

func (o *PostUsergroupsCreated) Error() string {
	return fmt.Sprintf("[POST /usergroups][%d] postUsergroupsCreated ", 201)
}

func (o *PostUsergroupsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	return nil
}

// NewPostUsergroupsBadRequest creates a PostUsergroupsBadRequest with default headers values
func NewPostUsergroupsBadRequest() *PostUsergroupsBadRequest {
	return &PostUsergroupsBadRequest{}
}

/*PostUsergroupsBadRequest handles this case with default header values.

Invalid LDAP group DN.
*/
type PostUsergroupsBadRequest struct {
}

func (o *PostUsergroupsBadRequest) Error() string {
	return fmt.Sprintf("[POST /usergroups][%d] postUsergroupsBadRequest ", 400)
}

func (o *PostUsergroupsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUsergroupsUnauthorized creates a PostUsergroupsUnauthorized with default headers values
func NewPostUsergroupsUnauthorized() *PostUsergroupsUnauthorized {
	return &PostUsergroupsUnauthorized{}
}

/*PostUsergroupsUnauthorized handles this case with default header values.

User need to log in first.
*/
type PostUsergroupsUnauthorized struct {
}

func (o *PostUsergroupsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /usergroups][%d] postUsergroupsUnauthorized ", 401)
}

func (o *PostUsergroupsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUsergroupsForbidden creates a PostUsergroupsForbidden with default headers values
func NewPostUsergroupsForbidden() *PostUsergroupsForbidden {
	return &PostUsergroupsForbidden{}
}

/*PostUsergroupsForbidden handles this case with default header values.

User in session does not have permission to the user group.
*/
type PostUsergroupsForbidden struct {
}

func (o *PostUsergroupsForbidden) Error() string {
	return fmt.Sprintf("[POST /usergroups][%d] postUsergroupsForbidden ", 403)
}

func (o *PostUsergroupsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUsergroupsConflict creates a PostUsergroupsConflict with default headers values
func NewPostUsergroupsConflict() *PostUsergroupsConflict {
	return &PostUsergroupsConflict{}
}

/*PostUsergroupsConflict handles this case with default header values.

A user group with same group name already exist, or an LDAP user group with same DN already exist.
*/
type PostUsergroupsConflict struct {
}

func (o *PostUsergroupsConflict) Error() string {
	return fmt.Sprintf("[POST /usergroups][%d] postUsergroupsConflict ", 409)
}

func (o *PostUsergroupsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUsergroupsInternalServerError creates a PostUsergroupsInternalServerError with default headers values
func NewPostUsergroupsInternalServerError() *PostUsergroupsInternalServerError {
	return &PostUsergroupsInternalServerError{}
}

/*PostUsergroupsInternalServerError handles this case with default header values.

Unexpected internal errors.
*/
type PostUsergroupsInternalServerError struct {
}

func (o *PostUsergroupsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /usergroups][%d] postUsergroupsInternalServerError ", 500)
}

func (o *PostUsergroupsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
