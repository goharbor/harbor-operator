// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutUsersUserIDSysadminReader is a Reader for the PutUsersUserIDSysadmin structure.
type PutUsersUserIDSysadminReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutUsersUserIDSysadminReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutUsersUserIDSysadminOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutUsersUserIDSysadminBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutUsersUserIDSysadminUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutUsersUserIDSysadminForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutUsersUserIDSysadminNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutUsersUserIDSysadminInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutUsersUserIDSysadminOK creates a PutUsersUserIDSysadminOK with default headers values
func NewPutUsersUserIDSysadminOK() *PutUsersUserIDSysadminOK {
	return &PutUsersUserIDSysadminOK{}
}

/*PutUsersUserIDSysadminOK handles this case with default header values.

Updated user's admin role successfully.
*/
type PutUsersUserIDSysadminOK struct {
}

func (o *PutUsersUserIDSysadminOK) Error() string {
	return fmt.Sprintf("[PUT /users/{user_id}/sysadmin][%d] putUsersUserIdSysadminOK ", 200)
}

func (o *PutUsersUserIDSysadminOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutUsersUserIDSysadminBadRequest creates a PutUsersUserIDSysadminBadRequest with default headers values
func NewPutUsersUserIDSysadminBadRequest() *PutUsersUserIDSysadminBadRequest {
	return &PutUsersUserIDSysadminBadRequest{}
}

/*PutUsersUserIDSysadminBadRequest handles this case with default header values.

Invalid user ID.
*/
type PutUsersUserIDSysadminBadRequest struct {
}

func (o *PutUsersUserIDSysadminBadRequest) Error() string {
	return fmt.Sprintf("[PUT /users/{user_id}/sysadmin][%d] putUsersUserIdSysadminBadRequest ", 400)
}

func (o *PutUsersUserIDSysadminBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutUsersUserIDSysadminUnauthorized creates a PutUsersUserIDSysadminUnauthorized with default headers values
func NewPutUsersUserIDSysadminUnauthorized() *PutUsersUserIDSysadminUnauthorized {
	return &PutUsersUserIDSysadminUnauthorized{}
}

/*PutUsersUserIDSysadminUnauthorized handles this case with default header values.

User need to log in first.
*/
type PutUsersUserIDSysadminUnauthorized struct {
}

func (o *PutUsersUserIDSysadminUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /users/{user_id}/sysadmin][%d] putUsersUserIdSysadminUnauthorized ", 401)
}

func (o *PutUsersUserIDSysadminUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutUsersUserIDSysadminForbidden creates a PutUsersUserIDSysadminForbidden with default headers values
func NewPutUsersUserIDSysadminForbidden() *PutUsersUserIDSysadminForbidden {
	return &PutUsersUserIDSysadminForbidden{}
}

/*PutUsersUserIDSysadminForbidden handles this case with default header values.

User does not have permission of admin role.
*/
type PutUsersUserIDSysadminForbidden struct {
}

func (o *PutUsersUserIDSysadminForbidden) Error() string {
	return fmt.Sprintf("[PUT /users/{user_id}/sysadmin][%d] putUsersUserIdSysadminForbidden ", 403)
}

func (o *PutUsersUserIDSysadminForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutUsersUserIDSysadminNotFound creates a PutUsersUserIDSysadminNotFound with default headers values
func NewPutUsersUserIDSysadminNotFound() *PutUsersUserIDSysadminNotFound {
	return &PutUsersUserIDSysadminNotFound{}
}

/*PutUsersUserIDSysadminNotFound handles this case with default header values.

User ID does not exist.
*/
type PutUsersUserIDSysadminNotFound struct {
}

func (o *PutUsersUserIDSysadminNotFound) Error() string {
	return fmt.Sprintf("[PUT /users/{user_id}/sysadmin][%d] putUsersUserIdSysadminNotFound ", 404)
}

func (o *PutUsersUserIDSysadminNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutUsersUserIDSysadminInternalServerError creates a PutUsersUserIDSysadminInternalServerError with default headers values
func NewPutUsersUserIDSysadminInternalServerError() *PutUsersUserIDSysadminInternalServerError {
	return &PutUsersUserIDSysadminInternalServerError{}
}

/*PutUsersUserIDSysadminInternalServerError handles this case with default header values.

Unexpected internal errors.
*/
type PutUsersUserIDSysadminInternalServerError struct {
}

func (o *PutUsersUserIDSysadminInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /users/{user_id}/sysadmin][%d] putUsersUserIdSysadminInternalServerError ", 500)
}

func (o *PutUsersUserIDSysadminInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
