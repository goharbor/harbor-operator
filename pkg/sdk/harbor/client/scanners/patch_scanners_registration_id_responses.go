// Code generated by go-swagger; DO NOT EDIT.

package scanners

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PatchScannersRegistrationIDReader is a Reader for the PatchScannersRegistrationID structure.
type PatchScannersRegistrationIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchScannersRegistrationIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchScannersRegistrationIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPatchScannersRegistrationIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchScannersRegistrationIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchScannersRegistrationIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchScannersRegistrationIDOK creates a PatchScannersRegistrationIDOK with default headers values
func NewPatchScannersRegistrationIDOK() *PatchScannersRegistrationIDOK {
	return &PatchScannersRegistrationIDOK{}
}

/*PatchScannersRegistrationIDOK handles this case with default header values.

Successfully set the specified scanner registration as system default
*/
type PatchScannersRegistrationIDOK struct {
}

func (o *PatchScannersRegistrationIDOK) Error() string {
	return fmt.Sprintf("[PATCH /scanners/{registration_id}][%d] patchScannersRegistrationIdOK ", 200)
}

func (o *PatchScannersRegistrationIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchScannersRegistrationIDUnauthorized creates a PatchScannersRegistrationIDUnauthorized with default headers values
func NewPatchScannersRegistrationIDUnauthorized() *PatchScannersRegistrationIDUnauthorized {
	return &PatchScannersRegistrationIDUnauthorized{}
}

/*PatchScannersRegistrationIDUnauthorized handles this case with default header values.

Unauthorized request
*/
type PatchScannersRegistrationIDUnauthorized struct {
}

func (o *PatchScannersRegistrationIDUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /scanners/{registration_id}][%d] patchScannersRegistrationIdUnauthorized ", 401)
}

func (o *PatchScannersRegistrationIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchScannersRegistrationIDForbidden creates a PatchScannersRegistrationIDForbidden with default headers values
func NewPatchScannersRegistrationIDForbidden() *PatchScannersRegistrationIDForbidden {
	return &PatchScannersRegistrationIDForbidden{}
}

/*PatchScannersRegistrationIDForbidden handles this case with default header values.

Request is not allowed
*/
type PatchScannersRegistrationIDForbidden struct {
}

func (o *PatchScannersRegistrationIDForbidden) Error() string {
	return fmt.Sprintf("[PATCH /scanners/{registration_id}][%d] patchScannersRegistrationIdForbidden ", 403)
}

func (o *PatchScannersRegistrationIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchScannersRegistrationIDInternalServerError creates a PatchScannersRegistrationIDInternalServerError with default headers values
func NewPatchScannersRegistrationIDInternalServerError() *PatchScannersRegistrationIDInternalServerError {
	return &PatchScannersRegistrationIDInternalServerError{}
}

/*PatchScannersRegistrationIDInternalServerError handles this case with default header values.

Internal server error happened
*/
type PatchScannersRegistrationIDInternalServerError struct {
}

func (o *PatchScannersRegistrationIDInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /scanners/{registration_id}][%d] patchScannersRegistrationIdInternalServerError ", 500)
}

func (o *PatchScannersRegistrationIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
